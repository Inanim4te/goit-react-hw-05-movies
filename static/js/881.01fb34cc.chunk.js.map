{"version":3,"file":"static/js/881.01fb34cc.chunk.js","mappings":"2NACA,EAA2B,yBAA3B,EAA2D,qBAA3D,EAAwF,sBAAxF,EAAuH,uB,4CCIxG,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAQC,EAAAA,EAAAA,UAAQ,kCAAMH,EAAaI,IAAI,gBAAvB,QAAmC,EAAnC,GAAuC,CAACJ,IACxDK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVL,GAGJM,GAED,GAAE,IAZ4B,SAuBhBA,IAvBgB,uEAuB/B,0FACc,mCADd,mBAG2BC,EAAAA,EAAAA,GAAM,qDAAD,OAFlB,mCAEkB,iCACuDP,EADvD,gCAHhC,OAGUQ,EAHV,OAMIZ,EAAUY,EAASC,KAAKC,SAN5B,gDAQIC,QAAQC,IAAR,MARJ,0DAvB+B,sBAmC/B,OACE,6BACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,SApBgB,SAAAC,GAC1BA,EAAEC,iBACFX,GACD,EAiB0CO,UAAWC,EAAhD,WACE,kBACEI,KAAK,OACLL,UAAWC,EACXK,MAAOnB,EACPoB,SA7BgB,SAAAJ,GACxBjB,EAAmC,KAAnBiB,EAAEK,OAAOF,MAAe,CAAEnB,MAAOgB,EAAEK,OAAOF,OAAU,CAAC,EACtE,KA6BO,mBAAQD,KAAK,SAASL,UAAWC,EAAjC,0BAKJ,0BACE,wBACGnB,EAAO2B,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAGE,IAAMC,MAAO,CAAEC,KAAMxB,GAArC,SACGoB,EAAGK,SAFCL,EAAGE,GAMf,UAKV,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"Movies_formWrap__NAHD0\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\"};","import css from './Movies.module.css';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = useMemo(() => searchParams.get('query') ?? '', [searchParams]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchMoviesByName();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const inputValueHandler = e => {\n    setSearchParams(e.target.value !== '' ? { query: e.target.value } : {});\n  };\n\n  const searchMoviesHandler = e => {\n    e.preventDefault();\n    fetchMoviesByName();\n  };\n\n  async function fetchMoviesByName() {\n    const KEY = '359e6ba07435d9fee7e2951e55fa38ce';\n    try {\n      const response = await axios(\n        `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n      );\n      setMovies(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <main>\n      <div className={css.formWrap}>\n        <form onSubmit={searchMoviesHandler} className={css.form}>\n          <input\n            type=\"text\"\n            className={css.input}\n            value={query}\n            onChange={inputValueHandler}\n          />\n          <button type=\"submit\" className={css.button}>\n            Search\n          </button>\n        </form>\n      </div>\n      <div>\n        <ul>\n          {movies.map(el => {\n            return (\n              <li key={el.id}>\n                <Link to={`${el.id}`} state={{ from: location }}>\n                  {el.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </main>\n  );\n}\n"],"names":["Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","useMemo","get","location","useLocation","useEffect","fetchMoviesByName","axios","response","data","results","console","log","className","css","onSubmit","e","preventDefault","type","value","onChange","target","map","el","to","id","state","from","title"],"sourceRoot":""}