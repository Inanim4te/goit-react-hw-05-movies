{"version":3,"file":"static/js/135.0421811a.chunk.js","mappings":"2NACA,EAAuB,2BAAvB,EAA8D,gCAA9D,EAAqG,2BAArG,EAAuI,2BAAvI,EAA0K,4BAA1K,EAA+M,6BAA/M,EAAmP,2B,4CCIpO,SAASA,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,MAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAPf,wCAuBrC,0FACc,mCADd,mBAG2BC,EAAAA,EAAAA,GAAM,sCAAD,OACYR,EADZ,oBAFlB,qCADd,OAGUS,EAHV,OAMIhB,EAASgB,EAASC,MANtB,gDAQIC,QAAQC,IAAR,MARJ,0DAvBqC,uBASrCC,EAAAA,EAAAA,YAAU,YAT2B,mCAUnCC,EAED,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACHE,OAAOC,KAAKxB,GAAOyB,SAGxBpB,EAAaqB,KAAKC,MAA4B,IAArB3B,EAAM4B,aAAsB,KACrDzB,EAAQH,EAAM6B,aAAaC,MAAM,EAAG,IACpCvB,GAAa,GACd,GAAE,CAACP,IAcJ,IAAQ+B,EAAyC/B,EAAzC+B,YAAaC,EAA4BhC,EAA5BgC,MAAOC,EAAqBjC,EAArBiC,SAAUC,EAAWlC,EAAXkC,OAEtC,OACE,8BACG5B,GACC,oBAEA,2BACE,iBAAK6B,UAAWC,EAAhB,WACE,UAAC,KAAD,CAAMC,GAAIzB,EAAa0B,QAASH,UAAWC,EAA3C,WACE,iBAAMD,UAAWC,EAAjB,oBADF,eAGA,iBAAKD,UAAWC,EAAhB,WACE,gBACEG,IACER,GAAW,0CACwBA,GAErCS,IAAI,SACJL,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,4BACE,kCAAQJ,EAAR,aAAkB9B,EAAlB,QACA,wCAAgBE,EAAhB,WAEF,4BACE,sCACA,uBAAI6B,QAEN,4BACE,oCACA,eAAIE,UAAWC,EAAf,SACGF,GACCA,EAAOO,KAAI,SAAAC,GAAE,OACX,yBACE,uBAAIA,EAAGC,QADAD,EAAGE,GADD,gBASvB,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,YAOb,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MovieDetails_wrap__84S6L\",\"movieWrap\":\"MovieDetails_movieWrap__cFita\",\"link\":\"MovieDetails_link__U+v+7\",\"span\":\"MovieDetails_span__iI7yM\",\"image\":\"MovieDetails_image__c1FeV\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"info\":\"MovieDetails_info__qv2SI\"};","import css from './MovieDetails.module.css';\nimport axios from 'axios';\nimport React, { useEffect, useState, Suspense, useRef } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const [year, setYear] = useState(null);\n  const [userScore, setUserScore] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMovieById();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!Object.keys(movie).length) {\n      return;\n    }\n    setUserScore(Math.round((movie.vote_average * 100) / 10));\n    setYear(movie.release_date.slice(0, 4));\n    setIsLoading(false);\n  }, [movie]);\n\n  async function fetchMovieById() {\n    const KEY = '359e6ba07435d9fee7e2951e55fa38ce';\n    try {\n      const response = await axios(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}`\n      );\n      setMovie(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const { poster_path, title, overview, genres } = movie;\n\n  return (\n    <>\n      {isLoading ? (\n        <div></div>\n      ) : (\n        <main>\n          <div className={css.wrap}>\n            <Link to={backLinkHref.current} className={css.link}>\n              <span className={css.span}>‚Üê</span> Go back\n            </Link>\n            <div className={css.movieWrap}>\n              <img\n                src={\n                  poster_path &&\n                  `https://image.tmdb.org/t/p/w500/${poster_path}`\n                }\n                alt=\"poster\"\n                className={css.image}\n              />\n              <div className={css.info}>\n                <div>\n                  <h2>{`${title} (${year})`}</h2>\n                  <p>User score: {userScore}%</p>\n                </div>\n                <div>\n                  <h3>Overview</h3>\n                  <p>{overview}</p>\n                </div>\n                <div>\n                  <h3>Genres</h3>\n                  <ul className={css.genres}>\n                    {genres &&\n                      genres.map(el => (\n                        <li key={el.id}>\n                          <p>{el.name}</p>\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </main>\n      )}\n    </>\n  );\n}\n"],"names":["MovieDetails","useState","movie","setMovie","year","setYear","userScore","setUserScore","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","axios","response","data","console","log","useEffect","fetchMovieById","Object","keys","length","Math","round","vote_average","release_date","slice","poster_path","title","overview","genres","className","css","to","current","src","alt","map","el","name","id","Suspense","fallback"],"sourceRoot":""}